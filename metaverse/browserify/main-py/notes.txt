https://pyinstaller.org/en/stable/installation.html
pip install -U pyinstaller
pyinstaller --version

Installed commands

The complete installation places these commands on the execution path:

    pyinstaller is the main command to build a bundled application. See Using PyInstaller.

    pyi-makespec is used to create a spec file. See Using Spec Files.

    pyi-archive_viewer is used to inspect a bundled application. See Inspecting Archives.

    pyi-bindepend is used to display dependencies of an executable. See Inspecting Executables.

    pyi-grab_version is used to extract a version resource from a Windows executable. See Capturing Windows Version Data.

pyinstaller your_program.py

curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
python3 get-pip.py

cli add path pip
saves in local folder path.
export PATH="/Users/lhlh/Library/Python/3.8/bin:$PATH"
/Users/lhlh/Library/Python/3.8/bin
modules is just running scripts from package.

PLAYWRIGHT_BROWSERS_PATH=0 playwright install chromium
pyinstaller -F main.py
build python 'main.spec' without file extension name.

>>> from playwright.sync_api import sync_playwright
>>> playwright = sync_playwright().start()

from playwright.sync_api import sync_playwright
playwright = sync_playwright().start()

# Use playwright.chromium, playwright.firefox or playwright.webkit
# Pass headless=False to launch() to see the browser UI
>>> browser = playwright.chromium.launch()
>>> page = browser.new_page()
>>> page.goto("http://whatsmyuseragent.org/")
>>> page.screenshot(path="example.png")
>>> browser.close()
>>> playwright.stop()

note

Bundling the browsers with the executables will generate bigger binaries. It is recommended to only bundle the browsers you use.